<?php

namespace App\Http\Controllers;

use App\Http\Controllers\converter\req\RequestToDummyModelReqConverter;
use App\Models\DummyModel;
use App\Services\DummyModelService;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Routing\Redirector;
use Illuminate\Support\Facades\Log;
use Illuminate\View\View;

class DummyModelController extends Controller
{
    protected $dummyModelService;
    protected $requestToDummyModelReqConverter;

    /**
     * DummyModelController constructor.
     * @param DummyModelService $dummyModelService
     * @param RequestToDummyModelReqConverter $requestToDummyModelReqConverter
     */
    public function __construct(DummyModelService $dummyModelService, RequestToDummyModelReqConverter $requestToDummyModelReqConverter)
    {
        $this->dummyModelService = $dummyModelService;
        $this->requestToDummyModelReqConverter = $requestToDummyModelReqConverter;
    }


    /**
     * index
     */
    public function index()
    {
        $dummyModels = $this->dummyModelService->getAll();
        return view('dummyModel.index', compact('dummyModels'));
    }


    /**
     * init create a DummyModel
     */
    public function create()
    {
        return view('dummyModel.create');
    }


    /**
     * Store a newly created resource in storage.
     * @param Request $request
     * @return Application|Factory|RedirectResponse|Redirector|View
     */
    public function store(Request $request)
    {
        $request->validate([
            'denotation'=>'required',
            'description'=>'required'
        ]);

        $dummyModel = $this->requestToDummyModelReqConverter->convert($request);

        try {
            $this->dummyModelService->create($dummyModel);
        } catch (\Throwable $e) {
            Log::error('Could not create dummyModel. Error occured ' . $e->getMessage());
            return view('dummyModel.index', compact('dummyModel'))->with('error', 'DummyModel could not save!');
        }

        return redirect('/dummyModel')->with('success', 'DummyModel saved!');
    }


    /**
     * @param $id
     * @return Application|Factory|RedirectResponse|Redirector|View
     */
    public function edit($id)
    {
        $dummyModel = null;
        try {
            $dummyModel = new DummyModel(['id'=>$id]);
            $dummyModel = $this->dummyModelService->read($dummyModel);
        } catch (\Throwable $e) {
            Log::error('Could not read dummyModel. Error occured ' . $e->getMessage());
            return redirect('/dummyModel')->with('error', 'DummyModel does not exist!');
        }
        return view('dummyModel.edit', compact('dummyModel'));
    }


    /**
     * @param Request $request
     * @param $id
     * @return Application|Factory|RedirectResponse|Redirector|View
     */
    public function update(Request $request, $id)
    {
        $request->validate([
            'denotation'=>'required',
            'description'=>'required'
        ]);

        $dummyModel = $this->requestToDummyModelReqConverter->convert($request);
        $dummyModel->id = $id;

        try {
            $this->dummyModelService->update($dummyModel);
        } catch (\Throwable $e) {
            Log::error('Could not update dummyModel. Error occured ' . $e->getMessage());
            return view('dummyModel.edit', compact('dummyModel'))->with('error', 'DummyModel could not update!');
        }

        return redirect('/dummyModel')->with('success', 'DummyModel updated!');
    }


    /**
     * @param $id
     * @return Application|RedirectResponse|Redirector
     */
    public function destroy($id)
    {
        try {
            $this->dummyModelService->delete(new DummyModel(['id'=>$id]));
        } catch (\Throwable $e) {
            Log::error('Could not delete dummyModel. Error occured ' . $e->getMessage());
            return redirect('/dummyModel')->with('error', 'DummyModel does not exist!');
        }

        return redirect('/dummyModel')->with('success', 'DummyModel deleted!');
    }
}
